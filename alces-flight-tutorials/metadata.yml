---
install:
  _: |
    service_root=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
    require handler
    require serviceware

    serviceware_install alces-web-terminal
    serviceware_add alces-flight-tutorials

    if serviceware_is_installed alces-flight-www; then
        ln -s \
          "${cw_ROOT}"/opt/alces-flight-tutorials/public/static \
          "${cw_ROOT}/var/lib/alces-flight-www/flight/tutorials"
        cp -R etc/alces-flight-www/* "${cw_ROOT}/etc/alces-flight-www"
    fi
    if handler_is_enabled cluster-www; then
        "${cw_ROOT}"/libexec/share/www-add-attributes \
                    "${service_root}"/var/alces-flight-www/tutorials/attributes.json.tpl
    fi

component-base:
  _: |
    require distro
    distro_restart_service clusterware-alces-flight-www

build:
  el6: |
    yum install -y -e0 nodejs npm gcc-c++
  el7: |
    require distro
    if distro_enable_repository epel; then
      yum install -y -e0 nodejs npm gcc-c++
    else
      echo "Sorry, the EPEL repository is not available."
      exit 1
    fi
  ubuntu1604: |
    apt-get install -y -e0 nodejs npm g++
  _: |
    dest="${cw_ROOT}"/opt/alces-flight-tutorials
    build_dir=/tmp/alces-flight-tutorials-client

    alces module load services/git

    curl -L \
      "https://github.com/alces-software/flight-tutorials-client/tarball/master" \
      -o /tmp/alces-flight-tutorials-client.tar.gz
    mkdir -p "${build_dir}"
    tar -C "${build_dir}" --strip-components=1 -xzf /tmp/alces-flight-tutorials-client.tar.gz

    pushd "${build_dir}"
    npm install
    npm run build
    cp -a \
      demo/dist/ \
      "${dest}"/public/static/
    popd
