#==============================================================================
# Copyright (C) 2017 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
---
install:
  el7: |
    install_startup_hooks() {
      local a
      for a in "${source}/dist/init/systemd"/*; do
          if [ "${a##*.}" == 'inactive' ]; then
              cp $a /etc/systemd/system/$(basename "$a" .inactive) || return 1
          else
              cp $a /etc/systemd/system && \
                  systemctl enable "$(basename $a)" || \
                  return 1
          fi
      done
    }
  el6: |
    install_startup_hooks() {
      local target_init_script a
      for a in "${source}/dist/init/sysv"/*.el6; do
          target_init_script="$(basename "$a" .el6)"
          if [ "${target_init_script##*.}" == 'inactive' ]; then
              cp $a /etc/init.d/$(basename "${target_init_script}" .inactive) && \
                  chmod 755 /etc/init.d/$(basename "${target_init_script}" .inactive) || \
                  return 1
          else
              cp $a /etc/init.d/${target_init_script} && \
                  chmod 755 /etc/init.d/${target_init_script} && \
                  chkconfig "${target_init_script}" on || \
                  return 1
          fi
      done
    }
  ubuntu1604: |
    install_startup_hooks() {
        for a in "${source}/dist/init/systemd"/*; do
            if [ "${a##*.}" == 'inactive' ]; then
                cp $a /etc/systemd/system/$(basename "$a" .inactive) || return 1
            else
                cp $a /etc/systemd/system && \
                    systemctl enable "$(basename $a)" || \
                    return 1
            fi
        done
    }
  _: |
    require serviceware
    serviceware_add serf
    serviceware_add pluginhook

    mkdir -p "${cw_ROOT}"/opt/clusterware-events

    cp -pR etc/* "${cw_ROOT}"/etc
    cp -pR libexec/* "${cw_ROOT}"/libexec
    cp -pR lib/* "${cw_ROOT}"/lib

    # title "Setting up handler base repository"
    # if [ -d "${target}/var/lib/handler/repos" ]; then
    #     doing 'Detect'
    # else
    #     doing 'Initialize'
    #     if [ "$cw_BUILD_repos_url" ]; then
    #         mkdir -p "${target}"/var/lib/handler/repos/base
    #         tar -C "${target}"/var/lib/handler/repos/base -xvzf "${source}"/clusterware-handlers.tar.gz &> "${dep_logs}/handler-init.log"
    #     else
    #         export cw_HANDLER_rev cw_HANDLER_track
    #         "${target}/bin/alces" handler update &>> "${dep_logs}/handler-init.log"
    #     fi
    # fi
    # say_done $?

    install_startup_hooks
build:
  el7: |
    install_startup_hooks() {
      local a
      for a in "${source}/dist/init/systemd"/*; do
          if [ "${a##*.}" == 'inactive' ]; then
              cp $a /etc/systemd/system/$(basename "$a" .inactive) || return 1
          else
              cp $a /etc/systemd/system && \
                  systemctl enable "$(basename $a)" || \
                  return 1
          fi
      done
    }
  el6: |
    install_startup_hooks() {
      local target_init_script a
      for a in "${source}/dist/init/sysv"/*.el6; do
          target_init_script="$(basename "$a" .el6)"
          if [ "${target_init_script##*.}" == 'inactive' ]; then
              cp $a /etc/init.d/$(basename "${target_init_script}" .inactive) && \
                  chmod 755 /etc/init.d/$(basename "${target_init_script}" .inactive) || \
                  return 1
          else
              cp $a /etc/init.d/${target_init_script} && \
                  chmod 755 /etc/init.d/${target_init_script} && \
                  chkconfig "${target_init_script}" on || \
                  return 1
          fi
      done
    }
  ubuntu1604: |
    install_startup_hooks() {
        for a in "${source}/dist/init/systemd"/*; do
            if [ "${a##*.}" == 'inactive' ]; then
                cp $a /etc/systemd/system/$(basename "$a" .inactive) || return 1
            else
                cp $a /etc/systemd/system && \
                    systemctl enable "$(basename $a)" || \
                    return 1
            fi
        done
    }
  _: |
    curl -L "https://releases.hashicorp.com/serf/0.6.4/serf_0.6.4_linux_amd64.zip" \
      -o /tmp/serf-source.zip
    mkdir -p "${cw_ROOT}/opt/serf/bin"
    unzip -d "${cw_ROOT}/opt/serf/bin" "/tmp/serf-source.zip"

    curl -L "https://github.com/progrium/pluginhook/archive/7b91f7692d3ec494d4945f27d6b88864cd2f4bde.tar.gz" \
      -o /tmp/pluginhook-source.tar.gz
    tar -C "/tmp" -xzf "/tmp/pluginhook-source.tar.gz"
    cd /tmp/pluginhook-*
    mkdir -p build
    export GOPATH=$(pwd)/build
    go get "golang.org/x/crypto/ssh/terminal" &> "${dep_logs}/pluginhook-goget.log"
    go build -o pluginhook
    mkdir -p "${cw_ROOT}"/opt/pluginhook/bin
    cp pluginhook "${cw_ROOT}"/opt/pluginhook/bin

    mkdir -p "${cw_ROOT}"/opt/clusterware-events

    cp -pR etc/* "${cw_ROOT}"/etc
    cp -pR libexec/* "${cw_ROOT}"/libexec
    cp -pR lib/* "${cw_ROOT}"/lib

    install_startup_hooks
