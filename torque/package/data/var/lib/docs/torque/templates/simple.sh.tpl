#!/bin/bash -l
#@          cw_TEMPLATE[name]="Simple serial (TORQUE)"
#@          cw_TEMPLATE[desc]="Submit a single job."
#@ cw_TEMPLATE[extended_desc]="Your job will be allocated a single core on the first available node."
#@     cw_TEMPLATE[copyright]="Copyright (C) 2016 Alces Software Ltd."
#@       cw_TEMPLATE[license]="Creative Commons Attribution-ShareAlike 4.0 International"
#==============================================================================
# Copyright (C) 2016 Alces Software Ltd.
#
# This work is licensed under a Creative Commons Attribution-ShareAlike
# 4.0 International License.
#
# See http://creativecommons.org/licenses/by-sa/4.0/ for details.
#==============================================================================
# ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
#                        TORQUE SUBMISSION SCRIPT
#                       AVERAGE QUEUE TIME: Short
# ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

# ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
#  >>>> OPERATIONAL DIRECTIVES - change these as required
# ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

#=====================
#  Working directory
#---------------------
# By default, your job will be executed in your home directory on the
# remote host.
#
# Alternatively, if you need to specify an explicit working
# directory for your job set a location here.
#
##PBS -d $HOME/sharedscratch/

#=========================
#  Environment variables
#-------------------------
# When enabled, this setting exports all variables present when the
# job is submitted.
#
#PBS -V

#================
#  Output files
#----------------
# Merge STDERR into STDOUT
#
# Enable this option to merge the standard error output stream into
# standard output - this is usually the best option unless you have
# a specific need to keep the output streams separated.
#
#PBS -j oe

# Set an output file for messages generated by your job script
#
# Specify a path to a file to contain the output from the standard
# output stream of your job script.
#
#PBS -o $PBS_JOBNAME.$PBS_JOBID.output

# Set an output file for STDERR
#
# Specify a path to a file to contain the output from the standard
# error stream of your job script.
#
# This is not required if you want to merge both output streams into
# the file specified above.
#
##PBS -e $PBS_JOBNAME.$PBS_JOBID.error

#============
#  Job name
#------------
# Set the name of your job - this will be shown in the process
# queue.
#
#PBS -N myjob

#=======================
#  Email notifications
#-----------------------
# Set the destination email address for notifications.  If not set,
# will send mail to the submitting user on the submission host.
#
##PBS -M your.email@example.com

# Set the conditions under which you wish to be notified.
# (a combination of: b:begin, e:end, a:aborted, or n:none)
# If not specified, will send mail if the job is aborted.
#
##PBS -m bea

# ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
#  >>>> RESOURCE REQUEST DIRECTIVES - always set these
# ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

#===================
#  Maximum runtime
#-------------------
# Expected RUNTIME
#
# Enter the expected runtime for your job.  Specification of a
# shorter runtime will cause the scheduler to be more likely to
# schedule your job sooner, but note that your job **will be
# terminated if it is still executing after the time specified**.
#
# Format: hours:minutes:seconds, e.g. `72:00:00` for 3 days.
#
#PBS -l walltime=72:00:00

#================
#  Memory limit
#----------------
# Expected HARD MEMORY LIMIT
#
# Enter the expected memory usage of your job.  Specification of a
# smaller memory requirement will cause the scheduler to be more
# likely to schedule your job sooner, but note that your job **may
# be terminated if it exceeds the specified allocation**.
#
# Note that this setting should be suffixed by 'kb' for kilobytes,
# 'mb' for megabytes or 'gb' for gigabytes.
# e.g. specify `4gb` for 4 gigabytes.
#
#PBS -l mem=4gb

# ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
#  >>>> SET TASK ENVIRONMENT VARIABLES
# ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
# If necessary, set up further environment variables that are not
# specific to your workload here.
#
# Several standard variables, such as PBS_JOBID, PBS_JOBNAME and
# PBS_NODEFILE, are made available by the scheduler.

# ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
#  >>>> YOUR WORKLOAD
# ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

#=======================
#  Environment modules
#-----------------------
# e.g.:
# module load apps/imb

#===========================
#  Create output directory
#---------------------------
# Specify and create an output file directory.

OUTPUT_PATH="$(pwd)/${PBS_JOBNAME}-outputs/$PBS_JOBID"
mkdir -p "$OUTPUT_PATH"

#===============================
#  Application launch commands
#-------------------------------
# Customize this section to suit your needs.

echo "Executing job commands, current working directory is $(pwd)"

# REPLACE THE FOLLOWING WITH YOUR APPLICATION COMMANDS

echo "This is an example job, I ran on `hostname -s` as `whoami`" > $OUTPUT_PATH/test.output
echo "Output file has been generated, please check $OUTPUT_PATH/test.output"
