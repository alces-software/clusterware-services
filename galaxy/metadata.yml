#==============================================================================
# Copyright (C) 2015 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
---
install:
  _: |
    . "${cw_ROOT}"/etc/clusterware.rc
    case "${cw_VERSION:-1.0.0}" in
      1.[012].*)
        . "${cw_ROOT}"/etc/serviceware.rc
        . "${cw_ROOT}"/etc/distro.rc
        curl -# -L "${cw_DIST_URL}/${cw_DIST}"/galaxy.tar.gz | tar -C "${cw_ROOT}" -xz
      ;;
      *)
        require serviceware
        serviceware_add galaxy
      ;;
    esac
component-webapp:
  el6: |
    if [ "$1" == "--no-postgres" ]; then
      yum install -y sqlite
    else
      yum install -y postgresql-server
    fi

    # From https://wiki.galaxyproject.org/Admin/Config/ToolDependenciesList
    yum install -y autoconf automake gcc gcc-c++ make gcc-gfortran \
      cmake atlas-devel blas-devel lapack-devel glibc-devel mercurial \
      subversion python-devel pkg-config openssl-devel \
      java-1.8.0-openjdk-devel zlib-devel

    enable_galaxy() {
        sed -e "s,_cw_ROOT_,${cw_ROOT},g" \
            init/sysv/clusterware-galaxy.el6 \
            > /etc/init.d/clusterware-galaxy
        chmod 755 /etc/init.d/clusterware-galaxy
    }

    enable_postgres() {
        /etc/init.d/postgresql initdb
        chkconfig postgresql on
        cat <<EOF > /var/lib/pgsql/data/pg_hba.conf
    local   all         postgres                          trust
    local   all         all                               md5
    host    all         all         127.0.0.1/32          md5
    host    all         all         ::1/128               md5
    EOF
    }

    start_postgres() {
        service postgresql start
    }

    enable_galaxy_proxy() {
        sed -e "s,_cw_ROOT_,${cw_ROOT},g" \
            init/sysv/clusterware-galaxy-proxy.el6 \
            > /etc/init.d/clusterware-galaxy-proxy
        chmod 755 /etc/init.d/clusterware-galaxy-proxy
    }

    enable_ftpd() {
        sed -e "s,_cw_ROOT_,${cw_ROOT},g" \
            init/sysv/clusterware-galaxy-ftpd.el6 \
            > /etc/init.d/clusterware-galaxy-ftpd
        chmod 755 /etc/init.d/clusterware-galaxy-ftpd
        sed -e "s,_cw_ROOT_,${cw_ROOT},g" -i "${cw_ROOT}"/opt/galaxy/etc/proftpd.conf
    }
  el7: |
    if [ "$1" == "--no-postgres" ]; then
      yum install -y sqlite
    else
      yum install -y postgresql-server postgresql-contrib
    fi

    # From https://wiki.galaxyproject.org/Admin/Config/ToolDependenciesList
    yum install -y autoconf automake gcc gcc-c++ make gcc-gfortran \
      cmake atlas-devel blas-devel lapack-devel glibc-devel mercurial \
      subversion python-devel pkg-config openssl-devel \
      java-1.8.0-openjdk-devel zlib-devel

    enable_galaxy() {
        sed -e "s,_cw_ROOT_,${cw_ROOT},g" \
            init/systemd/clusterware-galaxy.service \
            > /etc/systemd/system/clusterware-galaxy.service
        mkdir -p "${cw_ROOT}"/libexec/galaxy
        cp libexec/galaxy-starter "${cw_ROOT}"/libexec/galaxy
        chmod 755 "${cw_ROOT}"/libexec/galaxy/galaxy-starter
        mkdir -p /run/clusterware-galaxy
        chown galaxy /run/clusterware-galaxy
        cat <<EOF > /etc/tmpfiles.d/clusterware-galaxy.conf
    # Clusterware Galaxy runtime directory
    d /run/clusterware-galaxy 0755 galaxy root -
    EOF
    }

    enable_postgres() {
        postgresql-setup initdb
        systemctl enable postgresql
        cat <<EOF > /var/lib/pgsql/data/pg_hba.conf
    local   all         postgres                          trust
    local   all         all                               md5
    host    all         all         127.0.0.1/32          md5
    host    all         all         ::1/128               md5
    EOF
    }

    start_postgres() {
        systemctl start postgresql
    }

    enable_galaxy_proxy() {
        sed -e "s,_cw_ROOT_,${cw_ROOT},g" \
            init/systemd/clusterware-galaxy-proxy.service \
            > /etc/systemd/system/clusterware-galaxy-proxy.service
    }

    enable_ftpd() {
        sed -e "s,_cw_ROOT_,${cw_ROOT},g" \
            init/systemd/clusterware-galaxy-ftpd.service \
            > /etc/systemd/system/clusterware-galaxy-ftpd.service
        sed -e "s,_cw_ROOT_,${cw_ROOT},g" -i "${cw_ROOT}"/opt/galaxy/etc/proftpd.conf
    }
  _: |
    _generate_password() {
        dd if=/dev/urandom bs=20 count=1 2>/dev/null | base64 | tr '/+' '_' | cut -c1-10
    }

    require files

    mkdir -p /var/log/galaxy "${cw_ROOT}"/etc/ssl
    chmod 750 /var/log/galaxy
    cp -p etc/ssl/* "${cw_ROOT}"/etc/ssl
    chmod 0600 "${cw_ROOT}"/etc/ssl/*_key.pem
    enable_galaxy_proxy

    mkdir -p /var/log/galaxy
    cp etc/logrotate.d/* "${cw_ROOT}"/etc/logrotate.d

    SERVICEDIR="${cw_ROOT}/opt/galaxy"
    GALAXYDIR="${SERVICEDIR}/galaxy"
    DATADIR="${cw_ROOT}/var/lib/galaxy"
    mkdir -p "${DATADIR}"/share
    for a in database tool-data shed-tool-deps; do
      mv "${GALAXYDIR}"/$a "${DATADIR}"/share
      ln -s "${DATADIR}"/share/$a "${GALAXYDIR}"/$a
    done
    for a in config external_service_types; do
      mv "${GALAXYDIR}"/$a "${DATADIR}"
      ln -s "${DATADIR}"/$a "${GALAXYDIR}"/$a
    done
    mkdir -p "${DATADIR}"/share/pulsar

    mkdir "${DATADIR}"/html "${DATADIR}"/share/shed_tools
    mv "${GALAXYDIR}"/static/welcome.html "${DATADIR}"/html
    ln -s "${DATADIR}"/html/welcome.html "${GALAXYDIR}"/static/welcome.html

    install -Dm644 shed_tool_conf.xml.tpl "${DATADIR}"/config/shed_tool_conf.xml
    install -Dm644 job_conf.xml.tpl "${DATADIR}"/config/job_conf.xml
    install -Dm644 destinations.py.tpl "${GALAXYDIR}"/lib/galaxy/jobs/rules/destinations.py

    cores=$(grep -ic 'processor' /proc/cpuinfo)
    sed -i -e "s,_cw_ROOT_,${cw_ROOT},g" -e "s,_CORES_,${cores},g" \
      "$DATADIR"/config/shed_tool_conf.xml \
      "$DATADIR"/config/job_conf.xml \
      "${GALAXYDIR}"/lib/galaxy/jobs/rules/destinations.py

    cp "$DATADIR"/config/shed_tool_conf.xml "$DATADIR"/config/migrated_tools_conf.xml

    getent group galaxy &>/dev/null || groupadd --gid 361 galaxy
    getent passwd galaxy &>/dev/null || useradd --uid 361 --gid 361 \
        --shell /sbin/nologin --home-dir "${DATADIR}" galaxy
    chown -R galaxy:galaxy "${DATADIR}" /var/log/galaxy

    chown galaxy "${GALAXYDIR}"/config/galaxy.ini
    secret="$(dd if=/dev/urandom bs=24 count=2 2>/dev/null | md5sum | cut -d' ' -f1)"
    sed -e "s,_SECRET_,${secret},g" -i "$DATADIR"/config/galaxy.ini

    sed -e "s,^file_path.*,file_path = ${DATADIR}/share/database/files,g" \
      -e "s,^new_file_path.*,new_file_path = ${DATADIR}/share/database/tmp,g" \
      -e "s,^tool_dependency_dir.*,tool_dependency_dir = ${DATADIR}/share/shed-tool-deps,g" \
      -e "s,^tool_data_path.*,tool_data_path = ${DATADIR}/share/tool-data,g" \
      -e "s,^shed_tool_data_path.*,shed_tool_data_path = ${DATADIR}/share/tool-data,g" \
      -i "${DATADIR}"/config/galaxy.ini

    mkdir -p "${cw_ROOT}"/etc/galaxy
    install -Dm600 destinations.yml "${cw_ROOT}"/etc/galaxy/destinations.yml
    install -Dm600 etc/galaxy/galaxy.rc "${cw_ROOT}"/etc/galaxy/galaxy.rc
    sed -i -e "s,_cw_ROOT_,${cw_ROOT},g" "${cw_ROOT}"/etc/galaxy/galaxy.rc
    touch "${cw_ROOT}"/etc/galaxy/state.yml
    chown galaxy "${cw_ROOT}"/etc/galaxy/destinations.yml "${cw_ROOT}"/etc/galaxy/state.yml

    secret="$(dd if=/dev/urandom bs=1 count=18 2>/dev/null | base64)"
    sed -e "s,_SECRET_,${secret},g" -i "${cw_ROOT}"/etc/galaxy/destinations.yml

    if [ "$1" == "--no-postgres" ]; then
      sed -i -e 's,^database_connection = postgresql,#database_connection = postgresql,g' \
        -e 's,^#database_connection = sqlite,database_connection = sqlite,g' \
        "${DATADIR}"/config/galaxy.ini
      sed -i -e 's,^SQLConnectInfo,#SQLConnectInfo,g' \
        -e 's,^SQLBackend,#SQLBackend,g' \
        -e 's,^SQLNamedQuery,#SQLNamedQuery,g' \
        -e 's,^#SQLITE#,,g' \
        "${SERVICEDIR}"/etc/proftpd.conf
    else
      enable_postgres
      start_postgres
      password="$(dd if=/dev/urandom bs=24 count=2 2>/dev/null | base64 | cut -c1-16)"
      echo -e "${password}\n${password}" | su postgres -c 'createuser -D -R -S -P galaxy'
      sed -i -e "s,_PASSWORD_,${password},g" "${DATADIR}"/config/galaxy.ini "${SERVICEDIR}"/etc/proftpd.conf
      su postgres -c 'createdb -O galaxy galaxy'
      export PGPASSWORD="${password}"
      zcat galaxy.sql.gz | psql -U galaxy &>/dev/null
    fi

    files_load_config config config/cluster
    sane_cluster_name="$(echo "${cw_CLUSTER_name}" | tr "[A-Z]" "[a-z]" | sed -e 's/[^a-z0-9_]/-/g' -e 's/-[-]*/-/g' -e 's/-$//g')"

    if [ ! -f "${cw_ROOT}"/etc/ssl/cluster/cert.pem ]; then
      "${cw_ROOT}"/libexec/share/allocate-ssl-certificate "${sane_cluster_name}"
    fi

    files_load_config meta

    if [ -z "${cw_META_fqdn}" ]; then
      # SSL allocation was skipped, use our current hostname for meta
      cw_META_fqdn="$(hostname -f)"
      cw_META_hostname="$(hostname -s)"
      echo "cw_META_fqdn_desc=\"Public host name\"" >> "${cw_ROOT}"/etc/meta.rc
      echo "cw_META_fqdn=\"${cw_META_fqdn}\"" >> "${cw_ROOT}"/etc/meta.rc
      echo "cw_META_hostname_desc=\"Clusterware name\"" >> "${cw_ROOT}"/etc/meta.rc
      echo "cw_META_hostname=\"${cw_META_hostname}\"" >> "${cw_ROOT}"/etc/meta.rc
    fi

    if [ -f "${cw_ROOT}"/etc/ssl/cluster/cert.pem ]; then
      rm -f "${cw_ROOT}/etc/ssl/clusterware-galaxy-proxy_crt.pem" \
        "${cw_ROOT}/etc/ssl/clusterware-galaxy-proxy_key.pem"
      ln -s "${cw_ROOT}/etc/ssl/cluster/fullchain.pem" "${cw_ROOT}/etc/ssl/clusterware-galaxy-proxy_crt.pem"
      ln -s "${cw_ROOT}/etc/ssl/cluster/key.pem" "${cw_ROOT}/etc/ssl/clusterware-galaxy-proxy_key.pem"
    fi

    domain="${cw_META_fqdn:-${sane_cluster_name}.alces.network}"
    password=$(_generate_password)

    pushd "${GALAXYDIR}"
    sudo -u galaxy "./run.sh" &
    GALAXYPID=$!
    if [ "$GALAXYPID" ]; then
      # wait until it's listening on port
      while ps $GALAXYPID >/dev/null && ! ss -ln | grep -q 'LISTEN.*:6414 '; do
        sleep 5
      done
      curl -X POST --data "create_user_button=Submit&email=admin%40${domain}&password=${password}&confirm=${password}&username=galaxy-admin" http://localhost:6414/user/create &>/dev/null
      echo "cw_META_galaxy_admin_desc=\"Galaxy - admin username\"" >> "${cw_ROOT}"/etc/meta.rc
      echo "cw_META_galaxy_admin=\"admin@${domain}\"" >> "${cw_ROOT}"/etc/meta.rc
      echo "cw_META_galaxy_admin_password_desc=\"Galaxy - admin password\"" >> "${cw_ROOT}"/etc/meta.rc
      echo "cw_META_galaxy_admin_password=\"${password}\"" >> "${cw_ROOT}"/etc/meta.rc
      echo "cw_META_galaxy_url_desc=\"Galaxy - access point\"" >> "${cw_ROOT}"/etc/meta.rc
      echo "cw_META_galaxy_url=\"https://${domain}:64443/\"" >> "${cw_ROOT}"/etc/meta.rc
      sed -i -e "s/^admin_users = .*/admin_users = admin@${domain}/g" \
        "$DATADIR"/config/galaxy.ini
      # kill background process
      kill $GALAXYPID
      pkill -f "paster.py serve config/galaxy.ini"
    fi
    popd

    enable_galaxy

    echo "Galaxy FTP service" > "${DATADIR}"/ftp_welcome.txt
    enable_ftpd
component-pulsar:
  el6: |
    yum install -y python-setuptools java-1.8.0-openjdk-devel

    enable_pulsar() {
        sed -e "s,_cw_ROOT_,${cw_ROOT},g" \
            init/sysv/clusterware-galaxy-pulsar.el6 \
            > /etc/init.d/clusterware-galaxy-pulsar
        chmod 755 /etc/init.d/clusterware-galaxy-pulsar
    }
  el7: |
    yum install -y python-setuptools java-1.8.0-openjdk-devel

    enable_pulsar() {
        sed -e "s,_cw_ROOT_,${cw_ROOT},g" \
            init/systemd/clusterware-galaxy-pulsar.service \
            > /etc/systemd/system/clusterware-galaxy-pulsar.service
        mkdir -p "${cw_ROOT}"/libexec/galaxy
        cp libexec/pulsar-starter "${cw_ROOT}"/libexec/galaxy
        chmod 755 "${cw_ROOT}"/libexec/galaxy/pulsar-starter
        mkdir -p /run/clusterware-galaxy
        chown galaxy /run/clusterware-galaxy
        cat <<EOF > /etc/tmpfiles.d/clusterware-galaxy.conf
    # Clusterware Galaxy runtime directory
    d /run/clusterware-galaxy 0755 galaxy root -
    EOF
    }
  _: |
    mkdir -p /var/log/galaxy "${cw_ROOT}"/etc/galaxy/pulsar \
      "${cw_ROOT}"/var/lib/galaxy/pulsar \
      "${cw_ROOT}"/var/lib/galaxy/share/pulsar \
      "${cw_ROOT}"/etc/ssl
    cp pulsar/etc/logrotate.d/* "${cw_ROOT}"/etc/logrotate.d
    cp -p pulsar/ssl/* "${cw_ROOT}"/etc/ssl
    chmod 0600 "${cw_ROOT}"/etc/ssl/*_key.pem

    install -Dm644 pulsar/server.ini.tpl "${cw_ROOT}"/etc/galaxy/pulsar/server.ini
    install -Dm644 pulsar/local_env.sh.tpl "${cw_ROOT}"/etc/galaxy/pulsar/local_env.sh
    install -Dm644 pulsar/app.yml.tpl "${cw_ROOT}"/etc/galaxy/pulsar/app.yml

    sed -e "s,_cw_ROOT_,${cw_ROOT},g" -i "${cw_ROOT}"/etc/galaxy/pulsar/server.ini \
      "${cw_ROOT}"/etc/galaxy/pulsar/local_env.sh \
      "${cw_ROOT}"/etc/galaxy/pulsar/app.yml

    getent group galaxy &>/dev/null || groupadd --gid 361 galaxy
    getent passwd galaxy &>/dev/null || useradd --uid 361 --gid 361 \
        --shell /sbin/nologin --home-dir "${cw_ROOT}/var/lib/galaxy" galaxy

    chmod 0600 "${cw_ROOT}"/etc/galaxy/pulsar/app.yml
    chown galaxy "${cw_ROOT}"/etc/galaxy/pulsar/app.yml \
      "${cw_ROOT}"/etc/ssl/clusterware-galaxy-pulsar_crt_and_key.pem

    chown -R galaxy:galaxy "${cw_ROOT}"/var/lib/galaxy/share/pulsar \
      "${cw_ROOT}"/var/lib/galaxy/pulsar \
      /var/log/galaxy

    enable_pulsar
build:
  el6: |
    yum install -y postgresql-server pcre-devel openssl-devel \
      postgresql-devel sqlite-devel libffi-devel python-devel \
      python-setuptools ncurses-devel zlib-devel
    pyver=2.6
    pulsar_pidfile=/var/run/clusterware-galaxy-pulsar.pid
  el7: |
    yum install -y postgresql-server pcre-devel openssl-devel \
      postgresql-devel sqlite-devel libffi-devel python-devel \
      python-setuptools ncurses-devel zlib-devel
    pyver=2.7
    pulsar_pidfile=/run/clusterware-galaxy/pulsar.pid
  _: |
    SERVICEDIR="${cw_ROOT}/opt/galaxy"
    mkdir -p "${SERVICEDIR}"
    for a in build/*.sh; do
      . $a
    done
