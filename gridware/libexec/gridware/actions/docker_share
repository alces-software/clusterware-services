#!/bin/bash
#==============================================================================
# Copyright (C) 2017 Stephen F. Norledge and Alces Software Ltd.
#
# This file/package is part of Alces Clusterware.
#
# Alces Clusterware is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# Alces Clusterware is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this package.  If not, see <http://www.gnu.org/licenses/>.
#
# For more information on the Alces Clusterware, please visit:
# https://github.com/alces-software/clusterware
#==============================================================================
setup() {
    local a xdg_config
    IFS=: read -a xdg_config <<< "${XDG_CONFIG_HOME:-$HOME/.config}:${XDG_CONFIG_DIRS:-/etc/xdg}"
    for a in "${xdg_config[@]}"; do
        if [ -e "${a}"/clusterware/config.vars.sh ]; then
            source "${a}"/clusterware/config.vars.sh
            break
        fi
    done
    if [ -z "${cw_ROOT}" ]; then
        echo "$0: unable to locate clusterware configuration"
        exit 1
    fi
    kernel_load
}

main() {
  local image_id image_name
  image_name="gridware-${1}"

  set -o pipefail
  image_id=$(docker image inspect --format='{{.Id}}' "$_REGISTRY/$_REGISTRY_USER/$image_name" | sed -e "s/sha256://")

  if [[ $? -eq 0 && ! -z "$image_id" ]]; then

    docker save -o "${cw_GRIDWARE_root:-/opt/gridware}/docker/exports/${image_id}" "$_REGISTRY/$_REGISTRY_USER/$image_name"
    chmod 0644 "${cw_GRIDWARE_root:-/opt/gridware}/docker/exports/${image_id}"

    handler_broadcast gridware-docker-exports
  else
    echo "Unable to find image for $1."
    return 1
  fi
}

cw_BINNAME="alces gridware"

setup
require action
require files
require handler
require process

# root is required to broadcast the gridware-docker-exports event
process_reexec_sudo "$@"

r=$(type -p docker)
if [ $? != 0 -o ! -x "$r" ]; then
    action_die "unable to locate Docker installation"
elif ! process_reexec_sg docker --plain "$@"; then
    action_die "unable to find Docker group"
fi

files_load_config gridware

_REGISTRY=${cw_GRIDWARE_docker_registry:-docker.io}
_REGISTRY_USER=${cw_GRIDWARE_docker_registry_user:-alces}

main "$@"
